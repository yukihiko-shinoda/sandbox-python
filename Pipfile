[[source]]
url = "https://pypi.org/simple"
verify_ssl = true
name = "pypi"

[dev-packages]
autoflake = "*"
bandit = {version = "*", markers="python_version >= '3.7'"}
black = {version = "*", markers="python_version >= '3.7'"}
bump2version = "*"
cohesion = "*"
# Hotfix for Pipenv's Bug:
# - Pipenv should prioritize more cross-platform sys_platform condition between packages when lock
#   路 Issue #4101 路 pypa/pipenv
#   https://github.com/pypa/pipenv/issues/4101
colorama = "*"
# Pipenv can't crawl coverage==3.5.3:
# - Command: "pipenv install --skip-lock" fails 
#   since it tries to parse legacy package metadata and raise InstallError
#   路 Issue #5595 路 pypa/pipenv
#   https://github.com/pypa/pipenv/issues/5595
coverage = ">=3.5.4"
# The dlint less than 0.14.0 limits max version of flake8.
dlint = ">=0.14.0"
docformatter = {extras = ["tomli"], version = "*"}
dodgy = "*"
# Since Pipenv can't lock for too much combinations to attempt lock:
# pip._vendor.resolvelib.resolvers.ResolutionTooDeep: 2000000
# The hacking depends flake8 ~=5.0.1 or ~=4.0.1.
flake8 = {version = "<=6.0.0>=5.0.1,==4.0.1", markers="python_version >= '3.6'"}
# To use flake8 --radon-show-closures
flake8-polyfill = "*"
# Latest hacking depends on legacy version of flake8, and legacy hacking doesn't narrow flake8 version.
# When unpin hacking, it has possibility to install too legacy version of hacking.
hacking = {version = ">=5.0.0", markers="python_version >= '3.8'"}
invokelint = {version = "*", markers="python_version >= '3.7'"}
isort = "*"
mypy = "*"
pydocstyle = {version = "*", markers="python_version >= '3.6'"}
pylint = "*"
pytest = "*"
pyvelocity = {version = "*", markers="python_version >= '3.9'"}
radon = "*"
ruff = {version = "*", markers="python_version >= '3.7'"}
semgrep = {version = "*", markers="python_version >= '3.6'"}
types-invoke = "*"
xenon = "*"
sandboxpython = {path = ".", editable = true}

[packages]
